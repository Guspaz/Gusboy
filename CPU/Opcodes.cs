using System;

namespace GusBoy
{
    public partial class CPU
    {
        public struct opcode
        {
            public string mnemonic;
            public int operandLength;
            public Func<gshort, int> func;

            public opcode(string name, int paramLength, Func<gshort, int> func)
            {
                this.mnemonic = name;
                this.operandLength = paramLength;
                this.func = func;
            }
        }

        public opcode[] opcodes;

        private opcode[] GenerateOpcodes()
        {
            return new opcode[]
            {
                /* 0x00 */ new opcode("NOP", 0, nop),
                /* 0x01 */ new opcode("LD BC, 0x{0:X4}", 2, ld_bc_nn),
                /* 0x02 */ new opcode("LD (BC), A", 0, ld_pbc_a),
                /* 0x03 */ new opcode("INC BC", 0, inc_bc),
                /* 0x04 */ new opcode("INC B", 0, inc_b),
                /* 0x05 */ new opcode("DEC B", 0, dec_b),
                /* 0x06 */ new opcode("LD B, 0x{0:X2}", 1, ld_b_n),
                /* 0x07 */ new opcode("RLC A", 0, rlc_a),
                /* 0x08 */ new opcode("LD (0x{0:X4}), SP", 2, ld_pnn_sp),
                /* 0x09 */ new opcode("ADD HL, BC", 0, add_hl_bc),
                /* 0x0A */ new opcode("LD A, (BC)", 0, ld_a_pbc),
                /* 0x0B */ new opcode("DEC BC", 0, dec_bc),
                /* 0x0C */ new opcode("INC C", 0, inc_c),
                /* 0x0D */ new opcode("DEC C", 0, dec_c),
                /* 0x0E */ new opcode("LD C, 0x{0:X2}", 1, ld_c_n),
                /* 0x0F */ new opcode("RRC A", 0, rrc_a),

                /* 0x10 */ new opcode("STOP", 1, stop),
                /* 0x11 */ new opcode("LD DE, 0x{0:X4}", 2, ld_de_nn),
                /* 0x12 */ new opcode("LD (DE), A", 0, ld_pde_a),
                /* 0x13 */ new opcode("INC DE", 0, inc_de),
                /* 0x14 */ new opcode("INC D", 0, inc_d),
                /* 0x15 */ new opcode("DEC D", 0, dec_d),
                /* 0x16 */ new opcode("LD D, 0x{0:X2}", 1, ld_d_n),
                /* 0x17 */ new opcode("RL A", 0, rl_a),
                /* 0x18 */ new opcode("JR d0x{0:X2}", 1, jr_dn),
                /* 0x19 */ new opcode("ADD HL, DE", 0, add_hl_de),
                /* 0x1A */ new opcode("LD A, (DE)", 0, ld_a_pde),
                /* 0x1B */ new opcode("DEC DE", 0, dec_de),
                /* 0x1C */ new opcode("INC E", 0, inc_e),
                /* 0x1D */ new opcode("DEC E", 0, dec_e),
                /* 0x1E */ new opcode("LD E, 0x{0:X2}", 1, ld_e_n),
                /* 0x1F */ new opcode("RR A", 0, rr_a),

                /* 0x20 */ new opcode("JR NZ, d0x{0:X2}", 1, jr_nz_dn),
                /* 0x21 */ new opcode("LD HL, 0x{0:X4}", 2, ld_hl_nn),
                /* 0x22 */ new opcode("LDI (HL), A", 0, ldi_phl_a),
                /* 0x23 */ new opcode("INC HL", 0, inc_hl),
                /* 0x24 */ new opcode("INC H", 0, inc_h),
                /* 0x25 */ new opcode("DEC H", 0, dec_h),
                /* 0x26 */ new opcode("LD H, 0x{0:X2}", 1, ld_h_n),
                /* 0x27 */ new opcode("DAA", 0, daa),
                /* 0x28 */ new opcode("JR Z, d0x{0:X2}", 1, jr_z_dn),
                /* 0x29 */ new opcode("ADD HL, HL", 0, add_hl_hl),
                /* 0x2A */ new opcode("LDI A, (HL)", 0, ldi_a_phl),
                /* 0x2B */ new opcode("DEC HL", 0, dec_hl),
                /* 0x2C */ new opcode("INC L", 0, inc_l),
                /* 0x2D */ new opcode("DEC L", 0, dec_l),
                /* 0x2E */ new opcode("LD L, 0x{0:X2}", 1, ld_l_n),
                /* 0x2F */ new opcode("CPL", 0, cpl),

                /* 0x30 */ new opcode("JR NC, d0x{0:X2}", 1, jr_nc_dn),
                /* 0x31 */ new opcode("LD SP, 0x{0:X4}", 2, ld_sp_nn),
                /* 0x32 */ new opcode("LDD (HL), A", 0, ldd_phl_a),
                /* 0x33 */ new opcode("INC SP", 0, inc_sp),
                /* 0x34 */ new opcode("INC (HL)", 0, inc_phl),
                /* 0x35 */ new opcode("DEC (HL)", 0, dec_phl),
                /* 0x36 */ new opcode("LD (HL), 0x{0:X2}", 1, ld_phl_n),
                /* 0x37 */ new opcode("SCF", 0, scf),
                /* 0x38 */ new opcode("JR C, d0x{0:X2}", 1, jr_c_dn),
                /* 0x39 */ new opcode("ADD HL, SP", 0, add_hl_sp),
                /* 0x3A */ new opcode("LDD A, (HL)", 0, ldd_a_phl),
                /* 0x3B */ new opcode("DEC SP", 0, dec_sp),
                /* 0x3C */ new opcode("INC A", 0, inc_a),
                /* 0x3D */ new opcode("DEC A", 0, dec_a),
                /* 0x3E */ new opcode("LD A, 0x{0:X2}", 1, ld_a_n),
                /* 0x3F */ new opcode("CCF", 0, ccf),

                /* 0x40 */ new opcode("LD B, B", 0, nop), // Equivalent to nop
                /* 0x41 */ new opcode("LD B, C", 0, ld_b_c),
                /* 0x42 */ new opcode("LD B, D", 0, ld_b_d),
                /* 0x43 */ new opcode("LD B, E", 0, ld_b_e),
                /* 0x44 */ new opcode("LD B, H", 0, ld_b_h),
                /* 0x45 */ new opcode("LD B, L", 0, ld_b_l),
                /* 0x46 */ new opcode("LD B, (HL)", 0, ld_b_phl),
                /* 0x47 */ new opcode("LD B, A", 0, ld_b_a),
                /* 0x48 */ new opcode("LD C, B", 0, ld_c_b),
                /* 0x49 */ new opcode("LD C, C", 0, nop), // Equivalent to nop
                /* 0x4A */ new opcode("LD C, D", 0, ld_c_d),
                /* 0x4B */ new opcode("LD C, E", 0, ld_c_e),
                /* 0x4C */ new opcode("LD C, H", 0, ld_c_h),
                /* 0x4D */ new opcode("LD C, L", 0, ld_c_l),
                /* 0x4E */ new opcode("LD C, (HL)", 0, ld_c_phl),
                /* 0x4F */ new opcode("LD C, A", 0, ld_c_a),

                /* 0x50 */ new opcode("LD D, B", 0, ld_d_b),
                /* 0x51 */ new opcode("LD D, C", 0, ld_d_c),
                /* 0x52 */ new opcode("LD D, D", 0, nop), // Equivalent to nop
                /* 0x53 */ new opcode("LD D, E", 0, ld_d_e),
                /* 0x54 */ new opcode("LD D, H", 0, ld_d_h),
                /* 0x55 */ new opcode("LD D, L", 0, ld_d_l),
                /* 0x56 */ new opcode("LD D, (HL)", 0, ld_d_phl),
                /* 0x57 */ new opcode("LD D, A", 0, ld_d_a),
                /* 0x58 */ new opcode("LD E, B", 0, ld_e_b),
                /* 0x59 */ new opcode("LD E, C", 0, ld_e_c),
                /* 0x5A */ new opcode("LD E, D", 0, ld_e_d),
                /* 0x5B */ new opcode("LD E, E", 0, nop), // Equivalent to nop
                /* 0x5C */ new opcode("LD E, H", 0, ld_e_h),
                /* 0x5D */ new opcode("LD E, L", 0, ld_e_l),
                /* 0x5E */ new opcode("LD E, (HL)", 0, ld_e_phl),
                /* 0x5F */ new opcode("LD E, A", 0, ld_e_a),

                /* 0x60 */ new opcode("LD H, B", 0, ld_h_b),
                /* 0x61 */ new opcode("LD H, C", 0, ld_h_c),
                /* 0x62 */ new opcode("LD H, D", 0, ld_h_d),
                /* 0x63 */ new opcode("LD H, E", 0, ld_h_e),
                /* 0x64 */ new opcode("LD H, H", 0, nop), // Equivalent to nop
                /* 0x65 */ new opcode("LD H, L", 0, ld_h_l),
                /* 0x66 */ new opcode("LD H, (HL)", 0, ld_h_phl),
                /* 0x67 */ new opcode("LD H, A", 0, ld_h_a),
                /* 0x68 */ new opcode("LD L, B", 0, ld_l_b),
                /* 0x69 */ new opcode("LD L, C", 0, ld_l_c),
                /* 0x6A */ new opcode("LD L, D", 0, ld_l_d),
                /* 0x6B */ new opcode("LD L, E", 0, ld_l_e),
                /* 0x6C */ new opcode("LD L, H", 0, ld_l_h),
                /* 0x6D */ new opcode("LD L, L", 0, nop), // Equivalent to nop
                /* 0x6E */ new opcode("LD L, (HL)", 0, ld_l_phl),
                /* 0x6F */ new opcode("LD L, A", 0, ld_l_a),

                /* 0x70 */ new opcode("LD (HL), B", 0, ld_phl_b),
                /* 0x71 */ new opcode("LD (HL), C", 0, ld_phl_c),
                /* 0x72 */ new opcode("LD (HL), D", 0, ld_phl_d),
                /* 0x73 */ new opcode("LD (HL), E", 0, ld_phl_e),
                /* 0x74 */ new opcode("LD (HL), H", 0, ld_phl_h),
                /* 0x75 */ new opcode("LD (HL), L", 0, ld_phl_l),
                /* 0x76 */ new opcode("HALT", 0, halt),
                /* 0x77 */ new opcode("LD (HL), A", 0, ld_phl_a),
                /* 0x78 */ new opcode("LD A, B", 0, ld_a_b),
                /* 0x79 */ new opcode("LD A, C", 0, ld_a_c),
                /* 0x7A */ new opcode("LD A, D", 0, ld_a_d),
                /* 0x7B */ new opcode("LD A, E", 0, ld_a_e),
                /* 0x7C */ new opcode("LD A, H", 0, ld_a_h),
                /* 0x7D */ new opcode("LD A, L", 0, ld_a_l),
                /* 0x7E */ new opcode("LD A, (HL)", 0, ld_a_phl),
                /* 0x7F */ new opcode("LD A, A", 0, nop), // Equivalent to nop

                /* 0x80 */ new opcode("ADD A, B", 0, add_a_b),
                /* 0x81 */ new opcode("ADD A, C", 0, add_a_c),
                /* 0x82 */ new opcode("ADD A, D", 0, add_a_d),
                /* 0x83 */ new opcode("ADD A, E", 0, add_a_e),
                /* 0x84 */ new opcode("ADD A, H", 0, add_a_h),
                /* 0x85 */ new opcode("ADD A, L", 0, add_a_l),
                /* 0x86 */ new opcode("ADD A, (HL)", 0, add_a_phl),
                /* 0x87 */ new opcode("ADD A, A", 0, add_a_a),
                /* 0x88 */ new opcode("ADC A, B", 0, adc_a_b),
                /* 0x89 */ new opcode("ADC A, C", 0, adc_a_c),
                /* 0x8A */ new opcode("ADC A, D", 0, adc_a_d),
                /* 0x8B */ new opcode("ADC A, E", 0, adc_a_e),
                /* 0x8C */ new opcode("ADC A, H", 0, adc_a_h),
                /* 0x8D */ new opcode("ADC A, L", 0, adc_a_l),
                /* 0x8E */ new opcode("ADC A, (HL)", 0, adc_a_phl),
                /* 0x8F */ new opcode("ADC A, A", 0, adc_a_a),

                /* 0x90 */ new opcode("SUB A, B", 0, sub_a_b),
                /* 0x91 */ new opcode("SUB A, C", 0, sub_a_c),
                /* 0x92 */ new opcode("SUB A, D", 0, sub_a_d),
                /* 0x93 */ new opcode("SUB A, E", 0, sub_a_e),
                /* 0x94 */ new opcode("SUB A, H", 0, sub_a_h),
                /* 0x95 */ new opcode("SUB A, L", 0, sub_a_l),
                /* 0x96 */ new opcode("SUB A, (HL)", 0, sub_a_phl),
                /* 0x97 */ new opcode("SUB A, A", 0, sub_a_a),
                /* 0x98 */ new opcode("SBC A, B", 0, sbc_a_b),
                /* 0x99 */ new opcode("SBC A, C", 0, sbc_a_c),
                /* 0x9A */ new opcode("SBC A, D", 0, sbc_a_d),
                /* 0x9B */ new opcode("SBC A, E", 0, sbc_a_e),
                /* 0x9C */ new opcode("SBC A, H", 0, sbc_a_h),
                /* 0x9D */ new opcode("SBC A, L", 0, sbc_a_l),
                /* 0x9E */ new opcode("SBC A, (HL)", 0, sbc_a_phl),
                /* 0x9F */ new opcode("SBC A, A", 0, sbc_a_a),

                /* 0xA0 */ new opcode("AND B", 0, and_b),
                /* 0xA1 */ new opcode("AND C", 0, and_c),
                /* 0xA2 */ new opcode("AND D", 0, and_d),
                /* 0xA3 */ new opcode("AND E", 0, and_e),
                /* 0xA4 */ new opcode("AND H", 0, and_h),
                /* 0xA5 */ new opcode("AND L", 0, and_l),
                /* 0xA6 */ new opcode("AND (HL)", 0, and_phl),
                /* 0xA7 */ new opcode("AND A", 0, and_a),
                /* 0xA8 */ new opcode("XOR B", 0, xor_b),
                /* 0xA9 */ new opcode("XOR C", 0, xor_c),
                /* 0xAA */ new opcode("XOR D", 0, xor_d),
                /* 0xAB */ new opcode("XOR E", 0, xor_e),
                /* 0xAC */ new opcode("XOR H", 0, xor_h),
                /* 0xAD */ new opcode("XOR L", 0, xor_l),
                /* 0xAE */ new opcode("XOR (HL)", 0, xor_phl),
                /* 0xAF */ new opcode("XOR A", 0, xor_a),

                /* 0xB0 */ new opcode("OR B", 0, or_b),
                /* 0xB1 */ new opcode("OR C", 0, or_c),
                /* 0xB2 */ new opcode("OR D", 0, or_d),
                /* 0xB3 */ new opcode("OR E", 0, or_e),
                /* 0xB4 */ new opcode("OR H", 0, or_h),
                /* 0xB5 */ new opcode("OR L", 0, or_l),
                /* 0xB6 */ new opcode("OR (HL)", 0, or_phl),
                /* 0xB7 */ new opcode("OR A", 0, or_a),
                /* 0xB8 */ new opcode("CP B", 0, cp_b),
                /* 0xB9 */ new opcode("CP C", 0, cp_c),
                /* 0xBA */ new opcode("CP D", 0, cp_d),
                /* 0xBB */ new opcode("CP E", 0, cp_e),
                /* 0xBC */ new opcode("CP H", 0, cp_h),
                /* 0xBD */ new opcode("CP L", 0, cp_l),
                /* 0xBE */ new opcode("CP (HL)", 0, cp_phl),
                /* 0xBF */ new opcode("CP A", 0, cp_a),

                /* 0xC0 */ new opcode("RET NZ", 0, ret_nz),
                /* 0xC1 */ new opcode("POP BC", 0, pop_bc),
                /* 0xC2 */ new opcode("JP NZ, 0x{0:X4}", 2, jp_nz_nn),
                /* 0xC3 */ new opcode("JP 0x{0:X4}", 2, jp_nn),
                /* 0xC4 */ new opcode("CALL NZ, 0x{0:X4}", 2, call_nz_nn),
                /* 0xC5 */ new opcode("PUSH BC", 0, push_bc),
                /* 0xC6 */ new opcode("ADD A, 0x{0:X2}", 1, add_a_n),
                /* 0xC7 */ new opcode("RST 0", 0, rst_0),
                /* 0xC8 */ new opcode("RET Z", 0, ret_z),
                /* 0xC9 */ new opcode("RET", 0, ret),
                /* 0xCA */ new opcode("JP Z, 0x{0:X4}", 2, jp_z_nn),
                /* 0xCB */ new opcode("EXT", 1, ext),
                /* 0xCC */ new opcode("CALL Z, 0x{0:X4}", 2, call_z_nn),
                /* 0xCD */ new opcode("CALL 0x{0:X4}", 2, call_nn),
                /* 0xCE */ new opcode("ADC A, 0x{0:X2}", 1, adc_a_n),
                /* 0xCF */ new opcode("RST 8", 0, rst_8),

                /* 0xD0 */ new opcode("RET NC", 0, ret_nc),
                /* 0xD1 */ new opcode("POP DE", 0, pop_de),
                /* 0xD2 */ new opcode("JP NC, 0x{0:X4}", 2, jp_nc_nn),
                /* 0xD3 */ new opcode("XX", 0, crash),
                /* 0xD4 */ new opcode("CALL NC, 0x{0:X4}", 2, call_nc_nn),
                /* 0xD5 */ new opcode("PUSH DE", 0, push_de),
                /* 0xD6 */ new opcode("SUB A, 0x{0:X2}", 1, sub_a_n),
                /* 0xD7 */ new opcode("RST 10", 0, rst_10),
                /* 0xD8 */ new opcode("RET C", 0, ret_c),
                /* 0xD9 */ new opcode("RETI", 0, reti),
                /* 0xDA */ new opcode("JP C, 0x{0:X4}", 2, jp_c_nn),
                /* 0xDB */ new opcode("XX", 0, crash),
                /* 0xDC */ new opcode("CALL C, 0x{0:X4}", 2, call_c_nn),
                /* 0xDD */ new opcode("XX", 0, crash),
                /* 0xDE */ new opcode("SBC A, 0x{0:X2}", 1, sbc_a_n),
                /* 0xDF */ new opcode("RST 18", 0, rst_18),

                /* 0xE0 */ new opcode("LDH (0x{0:X2}), A", 1, ldh_pn_a),
                /* 0xE1 */ new opcode("POP HL", 0, pop_hl),
                /* 0xE2 */ new opcode("LD (C), A", 0, ld_pc_a),
                /* 0xE3 */ new opcode("XX", 0, crash),
                /* 0xE4 */ new opcode("XX", 0, crash),
                /* 0xE5 */ new opcode("PUSH HL", 0, push_hl),
                /* 0xE6 */ new opcode("AND 0x{0:X2}", 1, and_n),
                /* 0xE7 */ new opcode("RST 20", 0, rst_20),
                /* 0xE8 */ new opcode("ADD SP, d0x{0:X2}", 1, add_sp_dn),
                /* 0xE9 */ new opcode("JP (HL)", 0, jp_hl),
                /* 0xEA */ new opcode("LD (0x{0:X4}), A", 2, ld_pnn_a),
                /* 0xEB */ new opcode("XX", 0, crash),
                /* 0xEC */ new opcode("XX", 0, crash),
                /* 0xED */ new opcode("XX", 0, crash),
                /* 0xEE */ new opcode("XOR 0x{0:X2}", 1, xor_n),
                /* 0xEF */ new opcode("RST 28", 0, rst_28),

                /* 0xF0 */ new opcode("LDH A, (0x{0:X2})", 1, ldh_a_pn),
                /* 0xF1 */ new opcode("POP AF", 0, pop_af),
                /* 0xF2 */ new opcode("LDH A, (C)", 0, ld_a_pc),
                /* 0xF3 */ new opcode("DI", 0, di),
                /* 0xF4 */ new opcode("XX", 0, crash),
                /* 0xF5 */ new opcode("PUSH AF", 0, push_af),
                /* 0xF6 */ new opcode("OR 0x{0:X2}", 1, or_n),
                /* 0xF7 */ new opcode("RST 30", 0, rst_30),
                /* 0xF8 */ new opcode("LDHL SP, d0x{0:X2}", 1, ldhl_spdn),
                /* 0xF9 */ new opcode("LD SP, HL", 0, ld_sp_hl),
                /* 0xFA */ new opcode("LD A, (0x{0:X4})", 2, ld_a_pnn),
                /* 0xFB */ new opcode("EI", 0, ei),
                /* 0xFC */ new opcode("XX", 0, crash),
                /* 0xFD */ new opcode("XX", 0, crash),
                /* 0xFE */ new opcode("CP 0x{0:X2}", 1, cp_n),
                /* 0xFF */ new opcode("RST 38", 0, rst_38),
            };
        }
    }
}
